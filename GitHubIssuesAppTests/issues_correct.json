[
  {
    "url": "https://api.github.com/repos/apple/swift/issues/29306",
    "repository_url": "https://api.github.com/repos/apple/swift",
    "labels_url": "https://api.github.com/repos/apple/swift/issues/29306/labels{/name}",
    "comments_url": "https://api.github.com/repos/apple/swift/issues/29306/comments",
    "events_url": "https://api.github.com/repos/apple/swift/issues/29306/events",
    "html_url": "https://github.com/apple/swift/pull/29306",
    "id": 551856880,
    "node_id": "MDExOlB1bGxSZXF1ZXN0MzY0NDg4ODM5",
    "number": 29306,
    "title": "[Build System: Python] Test restructure",
    "user": {
      "login": "Rostepher",
      "id": 862492,
      "node_id": "MDQ6VXNlcjg2MjQ5Mg==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/862492?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Rostepher",
      "html_url": "https://github.com/Rostepher",
      "followers_url": "https://api.github.com/users/Rostepher/followers",
      "following_url": "https://api.github.com/users/Rostepher/following{/other_user}",
      "gists_url": "https://api.github.com/users/Rostepher/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Rostepher/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Rostepher/subscriptions",
      "organizations_url": "https://api.github.com/users/Rostepher/orgs",
      "repos_url": "https://api.github.com/users/Rostepher/repos",
      "events_url": "https://api.github.com/users/Rostepher/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Rostepher/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [

    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 4,
    "created_at": "2020-01-19T02:50:25Z",
    "updated_at": "2020-01-19T02:56:41Z",
    "closed_at": null,
    "author_association": "CONTRIBUTOR",
    "pull_request": {
      "url": "https://api.github.com/repos/apple/swift/pulls/29306",
      "html_url": "https://github.com/apple/swift/pull/29306",
      "diff_url": "https://github.com/apple/swift/pull/29306.diff",
      "patch_url": "https://github.com/apple/swift/pull/29306.patch"
    },
    "body": "This PR restructures the Python testing for `utils/build_swift` to mirror the module structure. Now tests for `utils/build_swift/build_swift` live in `utils/build_swift/tests/build_swift`. This allows for scripts in the top level of the module to also have tests that are not inter-mingled with the module tests.\r\n\r\nIn addition I've added new `run_tests.py` scripts to `swift_build_support` and `update_checkout` which use the standard `unittest` module to discover and execute the module tests. These scripts are then used by the validation test suite rather than having custom bash commands for each. This should be more reliable and discoverable for developers working on these modules/tools."
  },
  {
    "url": "https://api.github.com/repos/apple/swift/issues/29304",
    "repository_url": "https://api.github.com/repos/apple/swift",
    "labels_url": "https://api.github.com/repos/apple/swift/issues/29304/labels{/name}",
    "comments_url": "https://api.github.com/repos/apple/swift/issues/29304/comments",
    "events_url": "https://api.github.com/repos/apple/swift/issues/29304/events",
    "html_url": "https://github.com/apple/swift/pull/29304",
    "id": 551819877,
    "node_id": "MDExOlB1bGxSZXF1ZXN0MzY0NDYyMDg1",
    "number": 29304,
    "title": "[Diagnostics] Port diagnostics from FailureDiagnosis::visitObjectLiteralExpr ",
    "user": {
      "login": "LucianoPAlmeida",
      "id": 8292651,
      "node_id": "MDQ6VXNlcjgyOTI2NTE=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/8292651?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/LucianoPAlmeida",
      "html_url": "https://github.com/LucianoPAlmeida",
      "followers_url": "https://api.github.com/users/LucianoPAlmeida/followers",
      "following_url": "https://api.github.com/users/LucianoPAlmeida/following{/other_user}",
      "gists_url": "https://api.github.com/users/LucianoPAlmeida/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/LucianoPAlmeida/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/LucianoPAlmeida/subscriptions",
      "organizations_url": "https://api.github.com/users/LucianoPAlmeida/orgs",
      "repos_url": "https://api.github.com/users/LucianoPAlmeida/repos",
      "events_url": "https://api.github.com/users/LucianoPAlmeida/events{/privacy}",
      "received_events_url": "https://api.github.com/users/LucianoPAlmeida/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [

    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 0,
    "created_at": "2020-01-18T20:29:26Z",
    "updated_at": "2020-01-19T00:47:25Z",
    "closed_at": null,
    "author_association": "CONTRIBUTOR",
    "pull_request": {
      "url": "https://api.github.com/repos/apple/swift/pulls/29304",
      "html_url": "https://github.com/apple/swift/pull/29304",
      "diff_url": "https://github.com/apple/swift/pull/29304.diff",
      "patch_url": "https://github.com/apple/swift/pull/29304.patch"
    },
    "body": "<!-- What's in this pull request? -->\r\nPorts the `FailureDiagnosis::visitObjectLiteralExpr` from CSDiag to the new framework.\r\n\r\ncc @xedin @hborla :)"
  },
  {
    "url": "https://api.github.com/repos/apple/swift/issues/29303",
    "repository_url": "https://api.github.com/repos/apple/swift",
    "labels_url": "https://api.github.com/repos/apple/swift/issues/29303/labels{/name}",
    "comments_url": "https://api.github.com/repos/apple/swift/issues/29303/comments",
    "events_url": "https://api.github.com/repos/apple/swift/issues/29303/events",
    "html_url": "https://github.com/apple/swift/pull/29303",
    "id": 551807534,
    "node_id": "MDExOlB1bGxSZXF1ZXN0MzY0NDUyOTk2",
    "number": 29303,
    "title": "build: remove SWIFT_PATH_TO_CMARK_{SOURCE,BUILD}",
    "user": {
      "login": "compnerd",
      "id": 63311,
      "node_id": "MDQ6VXNlcjYzMzEx",
      "avatar_url": "https://avatars3.githubusercontent.com/u/63311?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/compnerd",
      "html_url": "https://github.com/compnerd",
      "followers_url": "https://api.github.com/users/compnerd/followers",
      "following_url": "https://api.github.com/users/compnerd/following{/other_user}",
      "gists_url": "https://api.github.com/users/compnerd/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/compnerd/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/compnerd/subscriptions",
      "organizations_url": "https://api.github.com/users/compnerd/orgs",
      "repos_url": "https://api.github.com/users/compnerd/repos",
      "events_url": "https://api.github.com/users/compnerd/events{/privacy}",
      "received_events_url": "https://api.github.com/users/compnerd/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [

    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 4,
    "created_at": "2020-01-18T18:45:43Z",
    "updated_at": "2020-01-18T21:24:37Z",
    "closed_at": null,
    "author_association": "COLLABORATOR",
    "pull_request": {
      "url": "https://api.github.com/repos/apple/swift/pulls/29303",
      "html_url": "https://github.com/apple/swift/pull/29303",
      "diff_url": "https://github.com/apple/swift/pull/29303.diff",
      "patch_url": "https://github.com/apple/swift/pull/29303.patch"
    },
    "body": "This replaces the custom handling for CMark with the standard CMake\r\nhandling for dependencies.  CMark now provides a `cmarkConfig` upstream\r\nand even has proper export targets for dependency tracking.  This moves\r\nthe standalone builds to use this.\r\n\r\n<!-- What's in this pull request? -->\r\nReplace this paragraph with a description of your changes and rationale. Provide links to external references/discussions if appropriate.\r\n\r\n<!-- If this pull request resolves any bugs in the Swift bug tracker, provide a link: -->\r\nResolves SR-NNNN.\r\n\r\n<!--\r\nBefore merging this pull request, you must run the Swift continuous integration tests.\r\nFor information about triggering CI builds via @swift-ci, see:\r\nhttps://github.com/apple/swift/blob/master/docs/ContinuousIntegration.md#swift-ci\r\n\r\nThank you for your contribution to Swift!\r\n-->\r\n"
  },
  {
    "url": "https://api.github.com/repos/apple/swift/issues/29302",
    "repository_url": "https://api.github.com/repos/apple/swift",
    "labels_url": "https://api.github.com/repos/apple/swift/issues/29302/labels{/name}",
    "comments_url": "https://api.github.com/repos/apple/swift/issues/29302/comments",
    "events_url": "https://api.github.com/repos/apple/swift/issues/29302/events",
    "html_url": "https://github.com/apple/swift/pull/29302",
    "id": 551805164,
    "node_id": "MDExOlB1bGxSZXF1ZXN0MzY0NDUxMzY3",
    "number": 29302,
    "title": "build: simplify, inline tool version recording",
    "user": {
      "login": "compnerd",
      "id": 63311,
      "node_id": "MDQ6VXNlcjYzMzEx",
      "avatar_url": "https://avatars3.githubusercontent.com/u/63311?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/compnerd",
      "html_url": "https://github.com/compnerd",
      "followers_url": "https://api.github.com/users/compnerd/followers",
      "following_url": "https://api.github.com/users/compnerd/following{/other_user}",
      "gists_url": "https://api.github.com/users/compnerd/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/compnerd/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/compnerd/subscriptions",
      "organizations_url": "https://api.github.com/users/compnerd/orgs",
      "repos_url": "https://api.github.com/users/compnerd/repos",
      "events_url": "https://api.github.com/users/compnerd/events{/privacy}",
      "received_events_url": "https://api.github.com/users/compnerd/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [

    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 2,
    "created_at": "2020-01-18T18:23:46Z",
    "updated_at": "2020-01-18T20:10:40Z",
    "closed_at": null,
    "author_association": "COLLABORATOR",
    "pull_request": {
      "url": "https://api.github.com/repos/apple/swift/pulls/29302",
      "html_url": "https://github.com/apple/swift/pull/29302",
      "diff_url": "https://github.com/apple/swift/pull/29302.diff",
      "patch_url": "https://github.com/apple/swift/pull/29302.patch"
    },
    "body": "This simplifies and inlines the version recording for the tools in use.\r\n\r\n<!-- What's in this pull request? -->\r\nReplace this paragraph with a description of your changes and rationale. Provide links to external references/discussions if appropriate.\r\n\r\n<!-- If this pull request resolves any bugs in the Swift bug tracker, provide a link: -->\r\nResolves SR-NNNN.\r\n\r\n<!--\r\nBefore merging this pull request, you must run the Swift continuous integration tests.\r\nFor information about triggering CI builds via @swift-ci, see:\r\nhttps://github.com/apple/swift/blob/master/docs/ContinuousIntegration.md#swift-ci\r\n\r\nThank you for your contribution to Swift!\r\n-->\r\n"
  },
  {
    "url": "https://api.github.com/repos/apple/swift/issues/29301",
    "repository_url": "https://api.github.com/repos/apple/swift",
    "labels_url": "https://api.github.com/repos/apple/swift/issues/29301/labels{/name}",
    "comments_url": "https://api.github.com/repos/apple/swift/issues/29301/comments",
    "events_url": "https://api.github.com/repos/apple/swift/issues/29301/events",
    "html_url": "https://github.com/apple/swift/pull/29301",
    "id": 551803197,
    "node_id": "MDExOlB1bGxSZXF1ZXN0MzY0NDQ5OTY1",
    "number": 29301,
    "title": "build-script-impl: remove some build-script options",
    "user": {
      "login": "compnerd",
      "id": 63311,
      "node_id": "MDQ6VXNlcjYzMzEx",
      "avatar_url": "https://avatars3.githubusercontent.com/u/63311?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/compnerd",
      "html_url": "https://github.com/compnerd",
      "followers_url": "https://api.github.com/users/compnerd/followers",
      "following_url": "https://api.github.com/users/compnerd/following{/other_user}",
      "gists_url": "https://api.github.com/users/compnerd/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/compnerd/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/compnerd/subscriptions",
      "organizations_url": "https://api.github.com/users/compnerd/orgs",
      "repos_url": "https://api.github.com/users/compnerd/repos",
      "events_url": "https://api.github.com/users/compnerd/events{/privacy}",
      "received_events_url": "https://api.github.com/users/compnerd/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [

    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 2,
    "created_at": "2020-01-18T18:05:34Z",
    "updated_at": "2020-01-18T20:09:40Z",
    "closed_at": null,
    "author_association": "COLLABORATOR",
    "pull_request": {
      "url": "https://api.github.com/repos/apple/swift/pulls/29301",
      "html_url": "https://github.com/apple/swift/pull/29301",
      "diff_url": "https://github.com/apple/swift/pull/29301.diff",
      "patch_url": "https://github.com/apple/swift/pull/29301.patch"
    },
    "body": "<!-- What's in this pull request? -->\r\nReplace this paragraph with a description of your changes and rationale. Provide links to external references/discussions if appropriate.\r\n\r\n<!-- If this pull request resolves any bugs in the Swift bug tracker, provide a link: -->\r\nResolves SR-NNNN.\r\n\r\n<!--\r\nBefore merging this pull request, you must run the Swift continuous integration tests.\r\nFor information about triggering CI builds via @swift-ci, see:\r\nhttps://github.com/apple/swift/blob/master/docs/ContinuousIntegration.md#swift-ci\r\n\r\nThank you for your contribution to Swift!\r\n-->\r\n"
  },
  {
    "url": "https://api.github.com/repos/apple/swift/issues/29299",
    "repository_url": "https://api.github.com/repos/apple/swift",
    "labels_url": "https://api.github.com/repos/apple/swift/issues/29299/labels{/name}",
    "comments_url": "https://api.github.com/repos/apple/swift/issues/29299/comments",
    "events_url": "https://api.github.com/repos/apple/swift/issues/29299/events",
    "html_url": "https://github.com/apple/swift/pull/29299",
    "id": 551798887,
    "node_id": "MDExOlB1bGxSZXF1ZXN0MzY0NDQ3MTkz",
    "number": 29299,
    "title": "build: always report the status of building `_Differentiation`",
    "user": {
      "login": "compnerd",
      "id": 63311,
      "node_id": "MDQ6VXNlcjYzMzEx",
      "avatar_url": "https://avatars3.githubusercontent.com/u/63311?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/compnerd",
      "html_url": "https://github.com/compnerd",
      "followers_url": "https://api.github.com/users/compnerd/followers",
      "following_url": "https://api.github.com/users/compnerd/following{/other_user}",
      "gists_url": "https://api.github.com/users/compnerd/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/compnerd/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/compnerd/subscriptions",
      "organizations_url": "https://api.github.com/users/compnerd/orgs",
      "repos_url": "https://api.github.com/users/compnerd/repos",
      "events_url": "https://api.github.com/users/compnerd/events{/privacy}",
      "received_events_url": "https://api.github.com/users/compnerd/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [

    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 4,
    "created_at": "2020-01-18T17:31:15Z",
    "updated_at": "2020-01-18T20:05:46Z",
    "closed_at": null,
    "author_association": "COLLABORATOR",
    "pull_request": {
      "url": "https://api.github.com/repos/apple/swift/pulls/29299",
      "html_url": "https://github.com/apple/swift/pull/29299",
      "diff_url": "https://github.com/apple/swift/pull/29299.diff",
      "patch_url": "https://github.com/apple/swift/pull/29299.patch"
    },
    "body": "This moves the build configuration information into the block which\r\nprints the full configuration details for the Swift runtime.  Simplify\r\nthe condition by merging the two blocks for building the standard\r\nlibrary and the `_Differentiation` module.\r\n\r\n<!-- What's in this pull request? -->\r\nReplace this paragraph with a description of your changes and rationale. Provide links to external references/discussions if appropriate.\r\n\r\n<!-- If this pull request resolves any bugs in the Swift bug tracker, provide a link: -->\r\nResolves SR-NNNN.\r\n\r\n<!--\r\nBefore merging this pull request, you must run the Swift continuous integration tests.\r\nFor information about triggering CI builds via @swift-ci, see:\r\nhttps://github.com/apple/swift/blob/master/docs/ContinuousIntegration.md#swift-ci\r\n\r\nThank you for your contribution to Swift!\r\n-->\r\n"
  },
  {
    "url": "https://api.github.com/repos/apple/swift/issues/29298",
    "repository_url": "https://api.github.com/repos/apple/swift",
    "labels_url": "https://api.github.com/repos/apple/swift/issues/29298/labels{/name}",
    "comments_url": "https://api.github.com/repos/apple/swift/issues/29298/comments",
    "events_url": "https://api.github.com/repos/apple/swift/issues/29298/events",
    "html_url": "https://github.com/apple/swift/pull/29298",
    "id": 551798303,
    "node_id": "MDExOlB1bGxSZXF1ZXN0MzY0NDQ2Nzg4",
    "number": 29298,
    "title": "[Runtime] Scrap metadata allocation pool",
    "user": {
      "login": "airspeedswift",
      "id": 8058277,
      "node_id": "MDQ6VXNlcjgwNTgyNzc=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/8058277?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/airspeedswift",
      "html_url": "https://github.com/airspeedswift",
      "followers_url": "https://api.github.com/users/airspeedswift/followers",
      "following_url": "https://api.github.com/users/airspeedswift/following{/other_user}",
      "gists_url": "https://api.github.com/users/airspeedswift/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/airspeedswift/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/airspeedswift/subscriptions",
      "organizations_url": "https://api.github.com/users/airspeedswift/orgs",
      "repos_url": "https://api.github.com/users/airspeedswift/repos",
      "events_url": "https://api.github.com/users/airspeedswift/events{/privacy}",
      "received_events_url": "https://api.github.com/users/airspeedswift/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [

    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 5,
    "created_at": "2020-01-18T17:26:14Z",
    "updated_at": "2020-01-18T22:16:20Z",
    "closed_at": null,
    "author_association": "MEMBER",
    "pull_request": {
      "url": "https://api.github.com/repos/apple/swift/pulls/29298",
      "html_url": "https://github.com/apple/swift/pull/29298",
      "diff_url": "https://github.com/apple/swift/pull/29298.diff",
      "patch_url": "https://github.com/apple/swift/pull/29298.patch"
    },
    "body": "It's unclear if this is actually helpful. It might lead to slightly faster launch times (needs some testing) but it makes it harder to see the actual metadata usage for small programs using `heap`, and for really small programs it rounds metadata dirty memory up to page size unnecessarily."
  },
  {
    "url": "https://api.github.com/repos/apple/swift/issues/29296",
    "repository_url": "https://api.github.com/repos/apple/swift",
    "labels_url": "https://api.github.com/repos/apple/swift/issues/29296/labels{/name}",
    "comments_url": "https://api.github.com/repos/apple/swift/issues/29296/comments",
    "events_url": "https://api.github.com/repos/apple/swift/issues/29296/events",
    "html_url": "https://github.com/apple/swift/pull/29296",
    "id": 551730446,
    "node_id": "MDExOlB1bGxSZXF1ZXN0MzY0Mzk4Njc4",
    "number": 29296,
    "title": "[android] Get build scripts working natively, fix tests and install",
    "user": {
      "login": "buttaface",
      "id": 48358669,
      "node_id": "MDQ6VXNlcjQ4MzU4NjY5",
      "avatar_url": "https://avatars1.githubusercontent.com/u/48358669?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/buttaface",
      "html_url": "https://github.com/buttaface",
      "followers_url": "https://api.github.com/users/buttaface/followers",
      "following_url": "https://api.github.com/users/buttaface/following{/other_user}",
      "gists_url": "https://api.github.com/users/buttaface/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/buttaface/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/buttaface/subscriptions",
      "organizations_url": "https://api.github.com/users/buttaface/orgs",
      "repos_url": "https://api.github.com/users/buttaface/repos",
      "events_url": "https://api.github.com/users/buttaface/events{/privacy}",
      "received_events_url": "https://api.github.com/users/buttaface/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [

    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 0,
    "created_at": "2020-01-18T06:42:08Z",
    "updated_at": "2020-01-18T07:46:07Z",
    "closed_at": null,
    "author_association": "CONTRIBUTOR",
    "pull_request": {
      "url": "https://api.github.com/repos/apple/swift/pulls/29296",
      "html_url": "https://github.com/apple/swift/pull/29296",
      "diff_url": "https://github.com/apple/swift/pull/29296.diff",
      "patch_url": "https://github.com/apple/swift/pull/29296.patch"
    },
    "body": "The build scripts assume Android cross-compilation using the NDK, so avoid that configuration if building on an Android host. Fix or disable several tests, and don't install a glibc.modulemap without a sysroot prefix.\r\n\r\nAlong with this remaining patch to supply an rpath and replace a couple Bionic headers that [the Termux app](https://termux.com/) removes, the Swift validation and test suite is down to only 11 failing tests:\r\n```\r\ndiff --git a/lib/Driver/UnixToolChains.cpp b/lib/Driver/UnixToolChains.cpp\r\nindex 07a19d9e54..7f79062bd1 100644\r\n--- a/lib/Driver/UnixToolChains.cpp\r\n+++ b/lib/Driver/UnixToolChains.cpp\r\n@@ -381,7 +381,13 @@ std::string toolchains::Android::getTargetForLinker() const {\r\n   }\r\n }\r\n \r\n-bool toolchains::Android::shouldProvideRPathToLinker() const { return false; }\r\n+bool toolchains::Android::shouldProvideRPathToLinker() const {\r\n+#if defined(__ANDROID__)\r\n+  return true;\r\n+#else\r\n+  return false;\r\n+#endif\r\n+}\r\n \r\n std::string toolchains::Cygwin::getDefaultLinker() const {\r\n   // Cygwin uses the default BFD linker, even on ARM.\r\ndiff --git a/stdlib/public/Platform/bionic.modulemap.gyb b/stdlib/public/Platform/bionic.modulemap.gyb\r\nindex e44f908265..da77854eb7 100644\r\n--- a/stdlib/public/Platform/bionic.modulemap.gyb\r\n+++ b/stdlib/public/Platform/bionic.modulemap.gyb\r\n@@ -291,11 +291,11 @@ module SwiftGlibc [system] {\r\n         export *\r\n       }\r\n       module sem {\r\n-        header \"${GLIBC_ARCH_INCLUDE_PATH}/sys/sem.h\"\r\n+        header \"${GLIBC_ARCH_INCLUDE_PATH}/linux/sem.h\"\r\n         export *\r\n       }\r\n       module shm {\r\n-        header \"${GLIBC_ARCH_INCLUDE_PATH}/sys/shm.h\"\r\n+        header \"${GLIBC_ARCH_INCLUDE_PATH}/linux/shm.h\"\r\n         export *\r\n       }\r\n       module inotify {\r\ndiff --git a/test/Driver/linker.swift b/test/Driver/linker.swift\r\nindex 7b5f0c3425..fd94906760 100644\r\n--- a/test/Driver/linker.swift\r\n+++ b/test/Driver/linker.swift\r\n@@ -29,7 +29,6 @@\r\n \r\n // RUN: %swiftc_driver -driver-print-jobs -target armv7-none-linux-androideabi -Ffoo -Fsystem car -F cdr -framework bar -Lbaz -lboo -Xlinker -undefined %s 2>&1 > %t.android.txt\r\n // RUN: %FileCheck -check-prefix ANDROID-armv7 %s < %t.android.txt\r\n-// RUN: %FileCheck -check-prefix ANDROID-armv7-NEGATIVE %s < %t.android.txt\r\n \r\n // RUN: %swiftc_driver -driver-print-jobs -target x86_64-unknown-windows-cygnus -Ffoo -Fsystem car -F cdr -framework bar -Lbaz -lboo -Xlinker -undefined %s 2>&1 > %t.cygwin.txt\r\n // RUN: %FileCheck -check-prefix CYGWIN-x86_64 %s < %t.cygwin.txt\r\n@@ -228,13 +227,13 @@\r\n // ANDROID-armv7-DAG: -lswiftCore\r\n // ANDROID-armv7-DAG: -L [[STDLIB_PATH:[^ ]+(/|\\\\\\\\)lib(/|\\\\\\\\)swift]]\r\n // ANDROID-armv7-DAG: -target armv7-unknown-linux-androideabi\r\n+// ANDROID-armv7-DAG: -Xlinker -rpath -Xlinker [[STDLIB_PATH]]\r\n // ANDROID-armv7-DAG: -F foo -iframework car -F cdr\r\n // ANDROID-armv7-DAG: -framework bar\r\n // ANDROID-armv7-DAG: -L baz\r\n // ANDROID-armv7-DAG: -lboo\r\n // ANDROID-armv7-DAG: -Xlinker -undefined\r\n // ANDROID-armv7: -o linker\r\n-// ANDROID-armv7-NEGATIVE-NOT: -Xlinker -rpath\r\n \r\n // CYGWIN-x86_64: swift\r\n // CYGWIN-x86_64: -o [[OBJECTFILE:.*]]\r\n```\r\nThe remaining failures are all related to `RUNPATH` issues discussed in #23208 and the Termux clang not coming with asan/tsan sanitizer support. I can add a couple tests for the new build-script build path if wanted."
  },
  {
    "url": "https://api.github.com/repos/apple/swift/issues/29295",
    "repository_url": "https://api.github.com/repos/apple/swift",
    "labels_url": "https://api.github.com/repos/apple/swift/issues/29295/labels{/name}",
    "comments_url": "https://api.github.com/repos/apple/swift/issues/29295/comments",
    "events_url": "https://api.github.com/repos/apple/swift/issues/29295/events",
    "html_url": "https://github.com/apple/swift/pull/29295",
    "id": 551711229,
    "node_id": "MDExOlB1bGxSZXF1ZXN0MzY0Mzg0MTM4",
    "number": 29295,
    "title": "[NFC-ish] Simplify module loader filename handling",
    "user": {
      "login": "brentdax",
      "id": 931226,
      "node_id": "MDQ6VXNlcjkzMTIyNg==",
      "avatar_url": "https://avatars0.githubusercontent.com/u/931226?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/brentdax",
      "html_url": "https://github.com/brentdax",
      "followers_url": "https://api.github.com/users/brentdax/followers",
      "following_url": "https://api.github.com/users/brentdax/following{/other_user}",
      "gists_url": "https://api.github.com/users/brentdax/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/brentdax/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/brentdax/subscriptions",
      "organizations_url": "https://api.github.com/users/brentdax/orgs",
      "repos_url": "https://api.github.com/users/brentdax/repos",
      "events_url": "https://api.github.com/users/brentdax/events{/privacy}",
      "received_events_url": "https://api.github.com/users/brentdax/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [

    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 0,
    "created_at": "2020-01-18T02:52:12Z",
    "updated_at": "2020-01-18T02:55:00Z",
    "closed_at": null,
    "author_association": "CONTRIBUTOR",
    "pull_request": {
      "url": "https://api.github.com/repos/apple/swift/pulls/29295",
      "html_url": "https://github.com/apple/swift/pull/29295",
      "diff_url": "https://github.com/apple/swift/pull/29295.diff",
      "patch_url": "https://github.com/apple/swift/pull/29295.patch"
    },
    "body": "This PR refactors `SerializedModuleLoaderBase` and its subclasses to clean up the tangle of functions and properties that are used to load the constituents of a Swift module. Specifically, it:\r\n\r\n* Introduces a new type, `SerializedModuleBaseName`, which represents a module name and is used to derive the individual filenames.\r\n* Simplifies the `open*File` functions and gives them common patterns.\r\n* Cleans up some weird quirks of the implementation.\r\n* Moves a number of details down into leaf functions.\r\n\r\nThis PR is not quite NFC. It makes two changes:\r\n\r\n1. While \"no such file\" errors when opening `.swiftsourceinfo` files will still be ignored, other I/O errors will not be.\r\n2. The module interface loader will now respect the `IgnoreSwiftSourceInfoFile` flag; it previously ignored it.\r\n\r\n@nkcsgexi I believe this second change is correct, but I had to change a test to make it happen, so I'm not sure. Should we always use a `.swiftsourceinfo` if it's present beside a `.swiftinterface` regardless of the `-ignore-module-source-info` flag, or was that a bug?"
  },
  {
    "url": "https://api.github.com/repos/apple/swift/issues/29294",
    "repository_url": "https://api.github.com/repos/apple/swift",
    "labels_url": "https://api.github.com/repos/apple/swift/issues/29294/labels{/name}",
    "comments_url": "https://api.github.com/repos/apple/swift/issues/29294/comments",
    "events_url": "https://api.github.com/repos/apple/swift/issues/29294/events",
    "html_url": "https://github.com/apple/swift/pull/29294",
    "id": 551706326,
    "node_id": "MDExOlB1bGxSZXF1ZXN0MzY0MzgwMzQ4",
    "number": 29294,
    "title": "Re-enable `asan_recover.swift` test on Darwin because it should work correctly there.",
    "user": {
      "login": "danliew-apple",
      "id": 36706441,
      "node_id": "MDQ6VXNlcjM2NzA2NDQx",
      "avatar_url": "https://avatars0.githubusercontent.com/u/36706441?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/danliew-apple",
      "html_url": "https://github.com/danliew-apple",
      "followers_url": "https://api.github.com/users/danliew-apple/followers",
      "following_url": "https://api.github.com/users/danliew-apple/following{/other_user}",
      "gists_url": "https://api.github.com/users/danliew-apple/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/danliew-apple/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/danliew-apple/subscriptions",
      "organizations_url": "https://api.github.com/users/danliew-apple/orgs",
      "repos_url": "https://api.github.com/users/danliew-apple/repos",
      "events_url": "https://api.github.com/users/danliew-apple/events{/privacy}",
      "received_events_url": "https://api.github.com/users/danliew-apple/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [

    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 1,
    "created_at": "2020-01-18T02:04:49Z",
    "updated_at": "2020-01-18T02:06:15Z",
    "closed_at": null,
    "author_association": "CONTRIBUTOR",
    "pull_request": {
      "url": "https://api.github.com/repos/apple/swift/pulls/29294",
      "html_url": "https://github.com/apple/swift/pull/29294",
      "diff_url": "https://github.com/apple/swift/pull/29294.diff",
      "patch_url": "https://github.com/apple/swift/pull/29294.patch"
    },
    "body": "Re-enable `asan_recover.swift` test on Darwin because it should work correctly there.\r\ncorrectly there.\r\n\r\nTo do this just disable on Linux where the test is currently broken.\r\n\r\nrdar://problem/58640751\r\n"
  },
  {
    "url": "https://api.github.com/repos/apple/swift/issues/29292",
    "repository_url": "https://api.github.com/repos/apple/swift",
    "labels_url": "https://api.github.com/repos/apple/swift/issues/29292/labels{/name}",
    "comments_url": "https://api.github.com/repos/apple/swift/issues/29292/comments",
    "events_url": "https://api.github.com/repos/apple/swift/issues/29292/events",
    "html_url": "https://github.com/apple/swift/pull/29292",
    "id": 551685109,
    "node_id": "MDExOlB1bGxSZXF1ZXN0MzY0MzYzMjM2",
    "number": 29292,
    "title": "Revert \"Reimplement function builders as statement transformations.\"",
    "user": {
      "login": "DougGregor",
      "id": 989428,
      "node_id": "MDQ6VXNlcjk4OTQyOA==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/989428?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/DougGregor",
      "html_url": "https://github.com/DougGregor",
      "followers_url": "https://api.github.com/users/DougGregor/followers",
      "following_url": "https://api.github.com/users/DougGregor/following{/other_user}",
      "gists_url": "https://api.github.com/users/DougGregor/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/DougGregor/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/DougGregor/subscriptions",
      "organizations_url": "https://api.github.com/users/DougGregor/orgs",
      "repos_url": "https://api.github.com/users/DougGregor/repos",
      "events_url": "https://api.github.com/users/DougGregor/events{/privacy}",
      "received_events_url": "https://api.github.com/users/DougGregor/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [

    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 2,
    "created_at": "2020-01-17T23:56:45Z",
    "updated_at": "2020-01-18T01:51:46Z",
    "closed_at": null,
    "author_association": "MEMBER",
    "pull_request": {
      "url": "https://api.github.com/repos/apple/swift/pulls/29292",
      "html_url": "https://github.com/apple/swift/pull/29292",
      "diff_url": "https://github.com/apple/swift/pull/29292.diff",
      "patch_url": "https://github.com/apple/swift/pull/29292.patch"
    },
    "body": "Reverts apple/swift#29133. It looks like it caused a type checker crash in rdar://problem/58695803"
  },
  {
    "url": "https://api.github.com/repos/apple/swift/issues/29289",
    "repository_url": "https://api.github.com/repos/apple/swift",
    "labels_url": "https://api.github.com/repos/apple/swift/issues/29289/labels{/name}",
    "comments_url": "https://api.github.com/repos/apple/swift/issues/29289/comments",
    "events_url": "https://api.github.com/repos/apple/swift/issues/29289/events",
    "html_url": "https://github.com/apple/swift/pull/29289",
    "id": 551678126,
    "node_id": "MDExOlB1bGxSZXF1ZXN0MzY0MzU3NTQ1",
    "number": 29289,
    "title": "Don't heap allocate for active requests",
    "user": {
      "login": "hamishknight",
      "id": 14794099,
      "node_id": "MDQ6VXNlcjE0Nzk0MDk5",
      "avatar_url": "https://avatars0.githubusercontent.com/u/14794099?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hamishknight",
      "html_url": "https://github.com/hamishknight",
      "followers_url": "https://api.github.com/users/hamishknight/followers",
      "following_url": "https://api.github.com/users/hamishknight/following{/other_user}",
      "gists_url": "https://api.github.com/users/hamishknight/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hamishknight/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hamishknight/subscriptions",
      "organizations_url": "https://api.github.com/users/hamishknight/orgs",
      "repos_url": "https://api.github.com/users/hamishknight/repos",
      "events_url": "https://api.github.com/users/hamishknight/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hamishknight/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [

    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 7,
    "created_at": "2020-01-17T23:26:32Z",
    "updated_at": "2020-01-18T16:56:05Z",
    "closed_at": null,
    "author_association": "COLLABORATOR",
    "pull_request": {
      "url": "https://api.github.com/repos/apple/swift/pulls/29289",
      "html_url": "https://github.com/apple/swift/pull/29289",
      "diff_url": "https://github.com/apple/swift/pull/29289.diff",
      "patch_url": "https://github.com/apple/swift/pull/29289.patch"
    },
    "body": "Introduce `ActiveRequest` which can refer to a request on the stack, and can be converted into an `AnyRequest` when we want persistent storage."
  },
  {
    "url": "https://api.github.com/repos/apple/swift/issues/29288",
    "repository_url": "https://api.github.com/repos/apple/swift",
    "labels_url": "https://api.github.com/repos/apple/swift/issues/29288/labels{/name}",
    "comments_url": "https://api.github.com/repos/apple/swift/issues/29288/comments",
    "events_url": "https://api.github.com/repos/apple/swift/issues/29288/events",
    "html_url": "https://github.com/apple/swift/pull/29288",
    "id": 551667557,
    "node_id": "MDExOlB1bGxSZXF1ZXN0MzY0MzQ4ODgx",
    "number": 29288,
    "title": "[ConstraintSystem] Remove `BindParam` and infer `inout` based on context",
    "user": {
      "login": "xedin",
      "id": 21240,
      "node_id": "MDQ6VXNlcjIxMjQw",
      "avatar_url": "https://avatars1.githubusercontent.com/u/21240?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/xedin",
      "html_url": "https://github.com/xedin",
      "followers_url": "https://api.github.com/users/xedin/followers",
      "following_url": "https://api.github.com/users/xedin/following{/other_user}",
      "gists_url": "https://api.github.com/users/xedin/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/xedin/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/xedin/subscriptions",
      "organizations_url": "https://api.github.com/users/xedin/orgs",
      "repos_url": "https://api.github.com/users/xedin/repos",
      "events_url": "https://api.github.com/users/xedin/events{/privacy}",
      "received_events_url": "https://api.github.com/users/xedin/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [

    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 7,
    "created_at": "2020-01-17T22:48:01Z",
    "updated_at": "2020-01-18T06:11:50Z",
    "closed_at": null,
    "author_association": "MEMBER",
    "pull_request": {
      "url": "https://api.github.com/repos/apple/swift/pulls/29288",
      "html_url": "https://github.com/apple/swift/pull/29288",
      "diff_url": "https://github.com/apple/swift/pull/29288.diff",
      "patch_url": "https://github.com/apple/swift/pull/29288.patch"
    },
    "body": "Since constraint generation from closure bodies is delayed until context is available\r\n(or it's determined that there is no context e.g. `_ = { $0 = 1 }`), it's possible to use \r\ncontextual function type to determine whether anonymous (or simplify untyped) \r\nclosure parameters are expected to be `inout` which allows us to avoid using special \r\nconstraint from `inout -> lvalue` conversion and as a result makes edge contraction obsolete.\r\n\r\n<!--\r\nBefore merging this pull request, you must run the Swift continuous integration tests.\r\nFor information about triggering CI builds via @swift-ci, see:\r\nhttps://github.com/apple/swift/blob/master/docs/ContinuousIntegration.md#swift-ci\r\n\r\nThank you for your contribution to Swift!\r\n-->\r\n"
  },
  {
    "url": "https://api.github.com/repos/apple/swift/issues/29285",
    "repository_url": "https://api.github.com/repos/apple/swift",
    "labels_url": "https://api.github.com/repos/apple/swift/issues/29285/labels{/name}",
    "comments_url": "https://api.github.com/repos/apple/swift/issues/29285/comments",
    "events_url": "https://api.github.com/repos/apple/swift/issues/29285/events",
    "html_url": "https://github.com/apple/swift/pull/29285",
    "id": 551659949,
    "node_id": "MDExOlB1bGxSZXF1ZXN0MzY0MzQyNTk2",
    "number": 29285,
    "title": "Add SE-0269 to the changelog",
    "user": {
      "login": "Jumhyn",
      "id": 1130891,
      "node_id": "MDQ6VXNlcjExMzA4OTE=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/1130891?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Jumhyn",
      "html_url": "https://github.com/Jumhyn",
      "followers_url": "https://api.github.com/users/Jumhyn/followers",
      "following_url": "https://api.github.com/users/Jumhyn/following{/other_user}",
      "gists_url": "https://api.github.com/users/Jumhyn/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Jumhyn/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Jumhyn/subscriptions",
      "organizations_url": "https://api.github.com/users/Jumhyn/orgs",
      "repos_url": "https://api.github.com/users/Jumhyn/repos",
      "events_url": "https://api.github.com/users/Jumhyn/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Jumhyn/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [

    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 3,
    "created_at": "2020-01-17T22:22:52Z",
    "updated_at": "2020-01-18T21:02:19Z",
    "closed_at": null,
    "author_association": "CONTRIBUTOR",
    "pull_request": {
      "url": "https://api.github.com/repos/apple/swift/pulls/29285",
      "html_url": "https://github.com/apple/swift/pull/29285",
      "diff_url": "https://github.com/apple/swift/pull/29285.diff",
      "patch_url": "https://github.com/apple/swift/pull/29285.patch"
    },
    "body": "This updates the changelog with the changes introduced by SE-0269.\r\n\r\nImplemented by #23934."
  },
  {
    "url": "https://api.github.com/repos/apple/swift/issues/29282",
    "repository_url": "https://api.github.com/repos/apple/swift",
    "labels_url": "https://api.github.com/repos/apple/swift/issues/29282/labels{/name}",
    "comments_url": "https://api.github.com/repos/apple/swift/issues/29282/comments",
    "events_url": "https://api.github.com/repos/apple/swift/issues/29282/events",
    "html_url": "https://github.com/apple/swift/pull/29282",
    "id": 551627069,
    "node_id": "MDExOlB1bGxSZXF1ZXN0MzY0MzE1NDEx",
    "number": 29282,
    "title": "[cmake] Add support for exporting frameworks/libraries into cmake exp…",
    "user": {
      "login": "atrick",
      "id": 2165663,
      "node_id": "MDQ6VXNlcjIxNjU2NjM=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/2165663?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/atrick",
      "html_url": "https://github.com/atrick",
      "followers_url": "https://api.github.com/users/atrick/followers",
      "following_url": "https://api.github.com/users/atrick/following{/other_user}",
      "gists_url": "https://api.github.com/users/atrick/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/atrick/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/atrick/subscriptions",
      "organizations_url": "https://api.github.com/users/atrick/orgs",
      "repos_url": "https://api.github.com/users/atrick/repos",
      "events_url": "https://api.github.com/users/atrick/events{/privacy}",
      "received_events_url": "https://api.github.com/users/atrick/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [

    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 5,
    "created_at": "2020-01-17T20:54:25Z",
    "updated_at": "2020-01-18T03:56:41Z",
    "closed_at": null,
    "author_association": "MEMBER",
    "pull_request": {
      "url": "https://api.github.com/repos/apple/swift/pulls/29282",
      "html_url": "https://github.com/apple/swift/pull/29282",
      "diff_url": "https://github.com/apple/swift/pull/29282.diff",
      "patch_url": "https://github.com/apple/swift/pull/29282.patch"
    },
    "body": "…ort files.\r\n\r\nI think this was just an oversight. The new cmake 3.16 seems to choke if we do\r\nnot add SourceKit to the exports file since there are dependencies upon it in\r\nother swift libraries.\r\n\r\n(cherry picked from commit 8d712af96575df088e98e5283a82fe891c8884b9)\r\n\r\n"
  },
  {
    "url": "https://api.github.com/repos/apple/swift/issues/29281",
    "repository_url": "https://api.github.com/repos/apple/swift",
    "labels_url": "https://api.github.com/repos/apple/swift/issues/29281/labels{/name}",
    "comments_url": "https://api.github.com/repos/apple/swift/issues/29281/comments",
    "events_url": "https://api.github.com/repos/apple/swift/issues/29281/events",
    "html_url": "https://github.com/apple/swift/pull/29281",
    "id": 551619267,
    "node_id": "MDExOlB1bGxSZXF1ZXN0MzY0MzA4ODgz",
    "number": 29281,
    "title": "[Build] Very basic support for building swift-driver",
    "user": {
      "login": "owenv",
      "id": 1946221,
      "node_id": "MDQ6VXNlcjE5NDYyMjE=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/1946221?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/owenv",
      "html_url": "https://github.com/owenv",
      "followers_url": "https://api.github.com/users/owenv/followers",
      "following_url": "https://api.github.com/users/owenv/following{/other_user}",
      "gists_url": "https://api.github.com/users/owenv/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/owenv/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/owenv/subscriptions",
      "organizations_url": "https://api.github.com/users/owenv/orgs",
      "repos_url": "https://api.github.com/users/owenv/repos",
      "events_url": "https://api.github.com/users/owenv/events{/privacy}",
      "received_events_url": "https://api.github.com/users/owenv/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [

    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 0,
    "created_at": "2020-01-17T20:34:16Z",
    "updated_at": "2020-01-18T20:15:56Z",
    "closed_at": null,
    "author_association": "COLLABORATOR",
    "pull_request": {
      "url": "https://api.github.com/repos/apple/swift/pulls/29281",
      "html_url": "https://github.com/apple/swift/pull/29281",
      "diff_url": "https://github.com/apple/swift/pull/29281.diff",
      "patch_url": "https://github.com/apple/swift/pull/29281.patch"
    },
    "body": "This is directly adapted from the SourceKit-LSP build. It doesn't get us any closer to a cross-compiled or two-stage build, but hopefully it's an ok starting point. Marking this as a WIP to get feedback on the general approach, and because I've never worked with the build system much in the past so it's possible there are serious issues I'm overlooking. The one issue I am running into is how to correctly use the system Foundation instead of corelibs-foundation on macOS. \r\n\r\nhttps://github.com/apple/swift-driver/pull/59 has the corresponding swift-driver changes"
  },
  {
    "url": "https://api.github.com/repos/apple/swift/issues/29277",
    "repository_url": "https://api.github.com/repos/apple/swift",
    "labels_url": "https://api.github.com/repos/apple/swift/issues/29277/labels{/name}",
    "comments_url": "https://api.github.com/repos/apple/swift/issues/29277/comments",
    "events_url": "https://api.github.com/repos/apple/swift/issues/29277/events",
    "html_url": "https://github.com/apple/swift/pull/29277",
    "id": 551555424,
    "node_id": "MDExOlB1bGxSZXF1ZXN0MzY0MjU2MjM0",
    "number": 29277,
    "title": "[5.2] Fix EscapeAnalysis losing precision during merge.",
    "user": {
      "login": "atrick",
      "id": 2165663,
      "node_id": "MDQ6VXNlcjIxNjU2NjM=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/2165663?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/atrick",
      "html_url": "https://github.com/atrick",
      "followers_url": "https://api.github.com/users/atrick/followers",
      "following_url": "https://api.github.com/users/atrick/following{/other_user}",
      "gists_url": "https://api.github.com/users/atrick/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/atrick/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/atrick/subscriptions",
      "organizations_url": "https://api.github.com/users/atrick/orgs",
      "repos_url": "https://api.github.com/users/atrick/repos",
      "events_url": "https://api.github.com/users/atrick/events{/privacy}",
      "received_events_url": "https://api.github.com/users/atrick/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [

    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 13,
    "created_at": "2020-01-17T18:02:21Z",
    "updated_at": "2020-01-19T02:32:42Z",
    "closed_at": null,
    "author_association": "MEMBER",
    "pull_request": {
      "url": "https://api.github.com/repos/apple/swift/pulls/29277",
      "html_url": "https://github.com/apple/swift/pull/29277",
      "diff_url": "https://github.com/apple/swift/pull/29277.diff",
      "patch_url": "https://github.com/apple/swift/pull/29277.patch"
    },
    "body": "Array storage was being stack promoted even though it escaped. This\r\nhappened because multiple locally allocated arrays were merged into\r\nthe same locally allocated array value box. For this to become a\r\nproblem, other bizarre merge events need to take place, such as a\r\nvalue node being mapped with a content node. The series of events led\r\nto a missing edge in the connection graph. One of the arrays was\r\nmapped directly to a project_box instruction which had forgotten it's\r\nrelationship with the alloc_box.\r\n\r\nIt is a trivial one line fix to simply preserve all value mappings.\r\n\r\n<rdar://58371330> app crashes (miscompile)\r\n\r\n(cherry picked from commit fbe38ce78d97df804fbf2b3a939d22e2f0013308)\r\n\r\n"
  },
  {
    "url": "https://api.github.com/repos/apple/swift/issues/29273",
    "repository_url": "https://api.github.com/repos/apple/swift",
    "labels_url": "https://api.github.com/repos/apple/swift/issues/29273/labels{/name}",
    "comments_url": "https://api.github.com/repos/apple/swift/issues/29273/comments",
    "events_url": "https://api.github.com/repos/apple/swift/issues/29273/events",
    "html_url": "https://github.com/apple/swift/pull/29273",
    "id": 551433713,
    "node_id": "MDExOlB1bGxSZXF1ZXN0MzY0MTU2Njkx",
    "number": 29273,
    "title": "[Build System: build-script] Module importer for build_swift.",
    "user": {
      "login": "Rostepher",
      "id": 862492,
      "node_id": "MDQ6VXNlcjg2MjQ5Mg==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/862492?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Rostepher",
      "html_url": "https://github.com/Rostepher",
      "followers_url": "https://api.github.com/users/Rostepher/followers",
      "following_url": "https://api.github.com/users/Rostepher/following{/other_user}",
      "gists_url": "https://api.github.com/users/Rostepher/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Rostepher/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Rostepher/subscriptions",
      "organizations_url": "https://api.github.com/users/Rostepher/orgs",
      "repos_url": "https://api.github.com/users/Rostepher/repos",
      "events_url": "https://api.github.com/users/Rostepher/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Rostepher/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [

    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 4,
    "created_at": "2020-01-17T14:04:56Z",
    "updated_at": "2020-01-17T21:42:48Z",
    "closed_at": null,
    "author_association": "CONTRIBUTOR",
    "pull_request": {
      "url": "https://api.github.com/repos/apple/swift/pulls/29273",
      "html_url": "https://github.com/apple/swift/pull/29273",
      "diff_url": "https://github.com/apple/swift/pull/29273.diff",
      "patch_url": "https://github.com/apple/swift/pull/29273.patch"
    },
    "body": "Implemented a module importer for the `build_swift` module which allows for a flattened API when external modules import submodules.\r\n\r\n```Python\r\n# Previously callers needed to import the nested path\r\nfrom build_swift.build_swift import defaults\r\nfrom build_swift.build_swift.argparse import types\r\n\r\n# Now callers can import as if the module were flat\r\nfrom build_swift import defaults\r\nfrom build_swift.argparse import types\r\n```"
  },
  {
    "url": "https://api.github.com/repos/apple/swift/issues/29272",
    "repository_url": "https://api.github.com/repos/apple/swift",
    "labels_url": "https://api.github.com/repos/apple/swift/issues/29272/labels{/name}",
    "comments_url": "https://api.github.com/repos/apple/swift/issues/29272/comments",
    "events_url": "https://api.github.com/repos/apple/swift/issues/29272/events",
    "html_url": "https://github.com/apple/swift/pull/29272",
    "id": 551365453,
    "node_id": "MDExOlB1bGxSZXF1ZXN0MzY0MDk5OTk0",
    "number": 29272,
    "title": "[DNM] Proof of conforming protocol extensions concept",
    "user": {
      "login": "johnno1962",
      "id": 1786033,
      "node_id": "MDQ6VXNlcjE3ODYwMzM=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/1786033?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/johnno1962",
      "html_url": "https://github.com/johnno1962",
      "followers_url": "https://api.github.com/users/johnno1962/followers",
      "following_url": "https://api.github.com/users/johnno1962/following{/other_user}",
      "gists_url": "https://api.github.com/users/johnno1962/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/johnno1962/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/johnno1962/subscriptions",
      "organizations_url": "https://api.github.com/users/johnno1962/orgs",
      "repos_url": "https://api.github.com/users/johnno1962/repos",
      "events_url": "https://api.github.com/users/johnno1962/events{/privacy}",
      "received_events_url": "https://api.github.com/users/johnno1962/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [

    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 6,
    "created_at": "2020-01-17T11:35:48Z",
    "updated_at": "2020-01-18T01:01:13Z",
    "closed_at": null,
    "author_association": "CONTRIBUTOR",
    "pull_request": {
      "url": "https://api.github.com/repos/apple/swift/pulls/29272",
      "html_url": "https://github.com/apple/swift/pull/29272",
      "diff_url": "https://github.com/apple/swift/pull/29272.diff",
      "patch_url": "https://github.com/apple/swift/pull/29272.patch"
    },
    "body": "Hi Apple,\r\n\r\nThis is a follow-up to https://github.com/apple/swift/pull/25786 attempting to remove the constraint that extensions of protocols cannot have conformances. It's in reasonably good shape working across modules, not involving major surgery on the compiler and working well enough to be able to build a toolchain. Only a handful of tests are broken at the moment. Most of the implementation is localised to the source file [ConformanceLookupTable.cpp](https://github.com/johnno1962/swift/blob/protocol-extension-conformances/lib/AST/ConformanceLookupTable.cpp) with small targeted changes elsewhere as required. It works by recursively resolving conformances each time the conformances of a nominal are looked up and tracking which inferred (implied?) conformances are used so they can trigger the generation of witness tables. As multiple source files can force the generation of a witness table they are emitted private to the file to avoid duplicate symbols.  This results in a certain amount of duplication but witness tables don't occupy much memory and is less of a problem if you use whole module optimisation for your build. The Swift runtime doesn't seem to mind.\r\n\r\nI'm filing this PR now in order to get some initial feedback and I'll be posting to swift evolution to gather some more test code to see if people can break the implementation as is. Compiler crashes are not unheard of and error messages could be better but if a program compiles I haven't seen any misbehaviour at run time as yet. I hope to be able to demonstrate it is viable to implement this functionality mentioned in the [generics manifesto](https://github.com/apple/swift/blob/master/docs/GenericsManifesto.md#conditional-conformances-via-protocol-extensions) and I'd personally very much like to see this as a part of the Swift language (subject to review).\r\n\r\nThere is a [toolchain available here](http://johnholdsworth.com/swift-LOCAL-2020-01-17-a-osx.tar.gz) to evaluate.\r\n\r\nAddresses https://bugs.swift.org/browse/SR-11013.\r\n"
  },
  {
    "url": "https://api.github.com/repos/apple/swift/issues/29250",
    "repository_url": "https://api.github.com/repos/apple/swift",
    "labels_url": "https://api.github.com/repos/apple/swift/issues/29250/labels{/name}",
    "comments_url": "https://api.github.com/repos/apple/swift/issues/29250/comments",
    "events_url": "https://api.github.com/repos/apple/swift/issues/29250/events",
    "html_url": "https://github.com/apple/swift/pull/29250",
    "id": 550752460,
    "node_id": "MDExOlB1bGxSZXF1ZXN0MzYzNjAwNjk2",
    "number": 29250,
    "title": "Fix Python 3.x error in Tuple.swift.gyb due concatenating \"range + list\"",
    "user": {
      "login": "Teemperor",
      "id": 736001,
      "node_id": "MDQ6VXNlcjczNjAwMQ==",
      "avatar_url": "https://avatars0.githubusercontent.com/u/736001?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Teemperor",
      "html_url": "https://github.com/Teemperor",
      "followers_url": "https://api.github.com/users/Teemperor/followers",
      "following_url": "https://api.github.com/users/Teemperor/following{/other_user}",
      "gists_url": "https://api.github.com/users/Teemperor/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Teemperor/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Teemperor/subscriptions",
      "organizations_url": "https://api.github.com/users/Teemperor/orgs",
      "repos_url": "https://api.github.com/users/Teemperor/repos",
      "events_url": "https://api.github.com/users/Teemperor/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Teemperor/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [

    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 2,
    "created_at": "2020-01-16T11:39:07Z",
    "updated_at": "2020-01-17T08:42:27Z",
    "closed_at": null,
    "author_association": "NONE",
    "pull_request": {
      "url": "https://api.github.com/repos/apple/swift/pulls/29250",
      "html_url": "https://github.com/apple/swift/pull/29250",
      "diff_url": "https://github.com/apple/swift/pull/29250.diff",
      "patch_url": "https://github.com/apple/swift/pull/29250.patch"
    },
    "body": "This was failing with the following error on my Python3 system:\r\n```\r\nFAILED: stdlib/public/core/8/Tuple.swift\r\ncd /home/teemperor/work/swift/swift/stdlib/public/core && /usr/bin/cmake -E make_directory /home/teemperor/work/swift/build/Ninja-ReleaseAssert+stdlib-Release/swift-linux-x86_64/stdlib/public/core/8 && /usr/bin/python /home/teemperor/work/swift/swift/utils/gyb -DunicodeGraphemeBreakPropertyFile=/home/teemperor/work/swift/swift/utils/UnicodeData/GraphemeBreakProperty.txt -DunicodeGraphemeBreakTestFile=/home/teemperor/work/swift/swift/utils/UnicodeData/GraphemeBreakTest.txt -DCMAKE_SIZEOF_VOID_P=8 -o /home/teemperor/work/swift/build/Ninja-ReleaseAssert+stdlib-Release/swift-linux-x86_64/stdlib/public/core/8/Tuple.swift.tmp Tuple.swift.gyb && /usr/bin/cmake -E copy_if_different /home/teemperor/work/swift/build/Ninja-ReleaseAssert+stdlib-Release/swift-linux-x86_64/stdlib/public/core/8/Tuple.swift.tmp /home/teemperor/work/swift/build/Ninja-ReleaseAssert+stdlib-Release/swift-linux-x86_64/stdlib/public/core/8/Tuple.swift && /usr/bin/cmake -E remove /home/teemperor/work/swift/build/Ninja-ReleaseAssert+stdlib-Release/swift-linux-x86_64/stdlib/public/core/8/Tuple.swift.tmp\r\nTraceback (most recent call last):\r\n  File \"/home/teemperor/work/swift/swift/utils/gyb\", line 3, in <module>\r\n    gyb.main()\r\n  File \"/home/teemperor/work/swift/swift/utils/gyb.py\", line 1263, in main\r\n    args.target.write(execute_template(ast, args.line_directive, **bindings))\r\n  File \"/home/teemperor/work/swift/swift/utils/gyb.py\", line 1131, in execute_template\r\n    ast.execute(execution_context)\r\n  File \"/home/teemperor/work/swift/swift/utils/gyb.py\", line 635, in execute\r\n    x.execute(context)\r\n  File \"/home/teemperor/work/swift/swift/utils/gyb.py\", line 721, in execute\r\n    result = eval(self.code, context.local_bindings)\r\n  File \"/home/teemperor/work/swift/swift/stdlib/public/core/Tuple.swift.gyb\", line 109, in <module>\r\n    %   typeParams = [chr(ord(\"A\") + i) for i in range(arity)]\r\n  File \"/home/teemperor/work/swift/swift/utils/gyb.py\", line 635, in execute\r\n    x.execute(context)\r\n  File \"/home/teemperor/work/swift/swift/utils/gyb.py\", line 721, in execute\r\n    result = eval(self.code, context.local_bindings)\r\n  File \"/home/teemperor/work/swift/swift/stdlib/public/core/Tuple.swift.gyb\", line 114, in <module>\r\n    %   greaterTuple = \"(\\\"a\\\", {})\".format(\", \".join(map(str, range(1, arity - 1) + [arity])))\r\nTypeError: unsupported operand type(s) for +: 'range' and 'list'\r\n```\r\n\r\nThis commit just converts the range to a list so we can concatenate this on Python 3.x (where\r\nthe implicit conversion from range to list is no longer possible).\r\n"
  },
  {
    "url": "https://api.github.com/repos/apple/swift/issues/29246",
    "repository_url": "https://api.github.com/repos/apple/swift",
    "labels_url": "https://api.github.com/repos/apple/swift/issues/29246/labels{/name}",
    "comments_url": "https://api.github.com/repos/apple/swift/issues/29246/comments",
    "events_url": "https://api.github.com/repos/apple/swift/issues/29246/events",
    "html_url": "https://github.com/apple/swift/pull/29246",
    "id": 550614828,
    "node_id": "MDExOlB1bGxSZXF1ZXN0MzYzNDg5MDYz",
    "number": 29246,
    "title": "[Incremental] Fixes for fine-grained dependencies + tests for them, but off-by-default",
    "user": {
      "login": "davidungar",
      "id": 461264,
      "node_id": "MDQ6VXNlcjQ2MTI2NA==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/461264?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/davidungar",
      "html_url": "https://github.com/davidungar",
      "followers_url": "https://api.github.com/users/davidungar/followers",
      "following_url": "https://api.github.com/users/davidungar/following{/other_user}",
      "gists_url": "https://api.github.com/users/davidungar/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/davidungar/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/davidungar/subscriptions",
      "organizations_url": "https://api.github.com/users/davidungar/orgs",
      "repos_url": "https://api.github.com/users/davidungar/repos",
      "events_url": "https://api.github.com/users/davidungar/events{/privacy}",
      "received_events_url": "https://api.github.com/users/davidungar/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [

    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 18,
    "created_at": "2020-01-16T07:03:54Z",
    "updated_at": "2020-01-16T23:17:25Z",
    "closed_at": null,
    "author_association": "CONTRIBUTOR",
    "pull_request": {
      "url": "https://api.github.com/repos/apple/swift/pulls/29246",
      "html_url": "https://github.com/apple/swift/pull/29246",
      "diff_url": "https://github.com/apple/swift/pull/29246.diff",
      "patch_url": "https://github.com/apple/swift/pull/29246.patch"
    },
    "body": "Includes all fixes required, and tests, too, before turning on fine-grained-dependencies:\r\n\r\n1. Better file header for fine-grained swiftdeps\r\n2. Sorts jobs when scheduling for ease of testing\r\n3. Fixes bugs in fine-grained transitive marking\r\n4. Uses swiftdeps path from Job instead of the one in the fine-grained swiftdeps file. (Better for testing)\r\n5. Does not try to read back swiftdeps (for assertion) when sent to stdout.\r\n6. Fixes dependence on argument-evaluation order that caused a Windows bug in fine-grained dependency code\r\n7. Fixes fine-grained issue writing empty name as underscore instead of empty string.\r\n8. Moves where driver passed fine-grained options to frontend.\r\n9. Fixes tests to also test fine-grained-dependencies, no matter which is the default:\r\n  - adds -disable-fine-grained-dependencies flag to old tests, and\r\n  - adds new tests for each such old test, named with \"-fine\" suffix and enabling fine grained dependencies.\r\n10. Adds more dependency unit tests, and creates corresponding unit tests for fine-grained dependencies.\r\n\r\n"
  },
  {
    "url": "https://api.github.com/repos/apple/swift/issues/29242",
    "repository_url": "https://api.github.com/repos/apple/swift",
    "labels_url": "https://api.github.com/repos/apple/swift/issues/29242/labels{/name}",
    "comments_url": "https://api.github.com/repos/apple/swift/issues/29242/comments",
    "events_url": "https://api.github.com/repos/apple/swift/issues/29242/events",
    "html_url": "https://github.com/apple/swift/pull/29242",
    "id": 550512416,
    "node_id": "MDExOlB1bGxSZXF1ZXN0MzYzNDA2NTA3",
    "number": 29242,
    "title": "[NFC] Define SILGen Request Zone and GenerateSIL Request",
    "user": {
      "login": "CodaFi",
      "id": 1896383,
      "node_id": "MDQ6VXNlcjE4OTYzODM=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/1896383?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/CodaFi",
      "html_url": "https://github.com/CodaFi",
      "followers_url": "https://api.github.com/users/CodaFi/followers",
      "following_url": "https://api.github.com/users/CodaFi/following{/other_user}",
      "gists_url": "https://api.github.com/users/CodaFi/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/CodaFi/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/CodaFi/subscriptions",
      "organizations_url": "https://api.github.com/users/CodaFi/orgs",
      "repos_url": "https://api.github.com/users/CodaFi/repos",
      "events_url": "https://api.github.com/users/CodaFi/events{/privacy}",
      "received_events_url": "https://api.github.com/users/CodaFi/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [

    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 5,
    "created_at": "2020-01-16T00:57:24Z",
    "updated_at": "2020-01-16T23:04:44Z",
    "closed_at": null,
    "author_association": "COLLABORATOR",
    "pull_request": {
      "url": "https://api.github.com/repos/apple/swift/pulls/29242",
      "html_url": "https://github.com/apple/swift/pull/29242",
      "diff_url": "https://github.com/apple/swift/pull/29242.diff",
      "patch_url": "https://github.com/apple/swift/pull/29242.patch"
    },
    "body": "Define a high-level request for SILGen and switch the high-level\r\nentrypoint to vector through it.\r\n\r\n\r\n"
  },
  {
    "url": "https://api.github.com/repos/apple/swift/issues/29239",
    "repository_url": "https://api.github.com/repos/apple/swift",
    "labels_url": "https://api.github.com/repos/apple/swift/issues/29239/labels{/name}",
    "comments_url": "https://api.github.com/repos/apple/swift/issues/29239/comments",
    "events_url": "https://api.github.com/repos/apple/swift/issues/29239/events",
    "html_url": "https://github.com/apple/swift/pull/29239",
    "id": 550495176,
    "node_id": "MDExOlB1bGxSZXF1ZXN0MzYzMzkyMjI5",
    "number": 29239,
    "title": "Propagate Clang types through SIL",
    "user": {
      "login": "varungandhi-apple",
      "id": 52841859,
      "node_id": "MDQ6VXNlcjUyODQxODU5",
      "avatar_url": "https://avatars2.githubusercontent.com/u/52841859?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/varungandhi-apple",
      "html_url": "https://github.com/varungandhi-apple",
      "followers_url": "https://api.github.com/users/varungandhi-apple/followers",
      "following_url": "https://api.github.com/users/varungandhi-apple/following{/other_user}",
      "gists_url": "https://api.github.com/users/varungandhi-apple/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/varungandhi-apple/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/varungandhi-apple/subscriptions",
      "organizations_url": "https://api.github.com/users/varungandhi-apple/orgs",
      "repos_url": "https://api.github.com/users/varungandhi-apple/repos",
      "events_url": "https://api.github.com/users/varungandhi-apple/events{/privacy}",
      "received_events_url": "https://api.github.com/users/varungandhi-apple/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [

    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 22,
    "created_at": "2020-01-15T23:58:34Z",
    "updated_at": "2020-01-18T03:28:29Z",
    "closed_at": null,
    "author_association": "CONTRIBUTOR",
    "pull_request": {
      "url": "https://api.github.com/repos/apple/swift/pulls/29239",
      "html_url": "https://github.com/apple/swift/pull/29239",
      "diff_url": "https://github.com/apple/swift/pull/29239.diff",
      "patch_url": "https://github.com/apple/swift/pull/29239.patch"
    },
    "body": "~~First commit is from #29210.~~\r\n\r\nThis PR allows us to use the Clang type in IRGen going forward."
  },
  {
    "url": "https://api.github.com/repos/apple/swift/issues/29236",
    "repository_url": "https://api.github.com/repos/apple/swift",
    "labels_url": "https://api.github.com/repos/apple/swift/issues/29236/labels{/name}",
    "comments_url": "https://api.github.com/repos/apple/swift/issues/29236/comments",
    "events_url": "https://api.github.com/repos/apple/swift/issues/29236/events",
    "html_url": "https://github.com/apple/swift/pull/29236",
    "id": 550488034,
    "node_id": "MDExOlB1bGxSZXF1ZXN0MzYzMzg2MzUx",
    "number": 29236,
    "title": "[WIP] Add profitability check to array-property-opt",
    "user": {
      "login": "meg-gupta",
      "id": 20177294,
      "node_id": "MDQ6VXNlcjIwMTc3Mjk0",
      "avatar_url": "https://avatars0.githubusercontent.com/u/20177294?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/meg-gupta",
      "html_url": "https://github.com/meg-gupta",
      "followers_url": "https://api.github.com/users/meg-gupta/followers",
      "following_url": "https://api.github.com/users/meg-gupta/following{/other_user}",
      "gists_url": "https://api.github.com/users/meg-gupta/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/meg-gupta/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/meg-gupta/subscriptions",
      "organizations_url": "https://api.github.com/users/meg-gupta/orgs",
      "repos_url": "https://api.github.com/users/meg-gupta/repos",
      "events_url": "https://api.github.com/users/meg-gupta/events{/privacy}",
      "received_events_url": "https://api.github.com/users/meg-gupta/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [

    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 7,
    "created_at": "2020-01-15T23:33:27Z",
    "updated_at": "2020-01-16T17:46:15Z",
    "closed_at": null,
    "author_association": "NONE",
    "pull_request": {
      "url": "https://api.github.com/repos/apple/swift/pulls/29236",
      "html_url": "https://github.com/apple/swift/pull/29236",
      "diff_url": "https://github.com/apple/swift/pull/29236.diff",
      "patch_url": "https://github.com/apple/swift/pull/29236.patch"
    },
    "body": "This change adds additional heuristics to array-property-opt to avoid code size increase in cases where the optimization may not be beneficial. With this change, we do not specialize a loop if it has any opaque function calls or the instruction count computed recursively exceeds a predefined threshold."
  },
  {
    "url": "https://api.github.com/repos/apple/swift/issues/29231",
    "repository_url": "https://api.github.com/repos/apple/swift",
    "labels_url": "https://api.github.com/repos/apple/swift/issues/29231/labels{/name}",
    "comments_url": "https://api.github.com/repos/apple/swift/issues/29231/comments",
    "events_url": "https://api.github.com/repos/apple/swift/issues/29231/events",
    "html_url": "https://github.com/apple/swift/pull/29231",
    "id": 550427534,
    "node_id": "MDExOlB1bGxSZXF1ZXN0MzYzMzM2MDM2",
    "number": 29231,
    "title": "[AutoDiff upstream] Add `@differentiable` declaration attribute type-checking.",
    "user": {
      "login": "dan-zheng",
      "id": 5590046,
      "node_id": "MDQ6VXNlcjU1OTAwNDY=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/5590046?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dan-zheng",
      "html_url": "https://github.com/dan-zheng",
      "followers_url": "https://api.github.com/users/dan-zheng/followers",
      "following_url": "https://api.github.com/users/dan-zheng/following{/other_user}",
      "gists_url": "https://api.github.com/users/dan-zheng/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dan-zheng/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dan-zheng/subscriptions",
      "organizations_url": "https://api.github.com/users/dan-zheng/orgs",
      "repos_url": "https://api.github.com/users/dan-zheng/repos",
      "events_url": "https://api.github.com/users/dan-zheng/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dan-zheng/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [

    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 2,
    "created_at": "2020-01-15T21:02:22Z",
    "updated_at": "2020-01-17T06:22:21Z",
    "closed_at": null,
    "author_association": "COLLABORATOR",
    "pull_request": {
      "url": "https://api.github.com/repos/apple/swift/pulls/29231",
      "html_url": "https://github.com/apple/swift/pull/29231",
      "diff_url": "https://github.com/apple/swift/pull/29231.diff",
      "patch_url": "https://github.com/apple/swift/pull/29231.patch"
    },
    "body": "The `@differentiable` attribute marks a function as differentiable.\r\n\r\nExample:\r\n```swift\r\n@differentiable(wrt: x, jvp: derivativeFoo where T: Differentiable)\r\nfunc id<T>(_ x: T) -> T { x }\r\n```\r\n\r\nThe `@differentiable` attribute has an optional `wrt:` clause specifying the\r\nparameters that are differentiated \"with respect to\", i.e. the differentiability\r\nparameters. The differentiability parameters must conform to the\r\n`Differentiable` protocol.\r\n\r\nIf the `wrt:` clause is unspecified, the differentiability parameters are\r\ncurrently inferred to be all parameters that conform to `Differentiable`.\r\n\r\nThe `@differentiable` attribute also has optional `jvp:` and `vjp:` labels\r\nfor registering derivative functions. These labels are deprecated in favor of\r\nthe `@deriative` attribute and will be removed soon.\r\n\r\nThe `@differentiable` attribute also has an optional `where` clause, specifying\r\nextra differentiability requirements for generic functions.\r\n\r\nThe `@differentiable` attribute is gated by the\r\n`-enable-experimental-differentiable-programming` flag.\r\n\r\n---\r\n\r\nType-checking rules (summary):\r\n- `@differentiable` attribute must be declared on a function-like \"original\"\r\n  declaration: `func`, `init`, `subscript`, `var` (computed properties only).\r\n- Parsed differentiability parameters must be valid (if they exist).\r\n- Parsed `where` clause must be valid (if it exists).\r\n- Differentiability parameters must all conform to `Differentiable`.\r\n- Original result must all conform to `Differentiable`.\r\n- If JVP/VJP functions are specified, they must match the expected type.\r\n  - `@differentiable(jvp:vjp:)` for derivative registration is deprecated in\r\n    favor of `@derivative` attribute, and will be removed soon.\r\n- Duplicate `@differentiable` attributes with the same differentiability\r\n  parameters are invalid.\r\n- For protocol requirements and class members with `@differentiable` attribute,\r\n  conforming types and subclasses must have the same `@differentiable` attribute\r\n  (or one with a superset of differentiability parameter indices) on\r\n  implementing/overriding declarations.\r\n\r\nThese rules are consistent with the [differentiable programming manifesto](https://github.com/apple/swift/blob/master/docs/DifferentiableProgramming.md#the-differentiable-declaration-attribute-1).\r\nThe main proposed rules are implemented.\r\n\r\nCode changes:\r\n- Add `DifferentiableAttributeTypeCheckRequest`.\r\n  - Currently, the request returns differentiability parameter indices,\r\n    while also resolving `JVPFunction`, `VJPFunction`, and\r\n    `DerivativeGenericSignature` and mutating them in-place in\r\n    `DifferentiableAttr`. This works fine for now.\r\n- Add \"is type-checked\" bit to `DifferentiableAttr`.\r\n  - Alternatively, I tried changing `CacheKind::SeparatelyCached` to\r\n    `CacheKind::Cached`, but it did not seem to work: `@differentiable`\r\n    attributes in non-primary-files were left unchecked.\r\n\r\nUpstream disorganized tests as-is from `tensorflow` branch.\r\n\r\nResolves TF-828: upstream `@differentiable` attribute type-checking."
  },
  {
    "url": "https://api.github.com/repos/apple/swift/issues/29230",
    "repository_url": "https://api.github.com/repos/apple/swift",
    "labels_url": "https://api.github.com/repos/apple/swift/issues/29230/labels{/name}",
    "comments_url": "https://api.github.com/repos/apple/swift/issues/29230/comments",
    "events_url": "https://api.github.com/repos/apple/swift/issues/29230/events",
    "html_url": "https://github.com/apple/swift/pull/29230",
    "id": 550395263,
    "node_id": "MDExOlB1bGxSZXF1ZXN0MzYzMzA5MTcz",
    "number": 29230,
    "title": "Remove warning for conflicting implementationOnly imports",
    "user": {
      "login": "keith",
      "id": 283886,
      "node_id": "MDQ6VXNlcjI4Mzg4Ng==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/283886?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/keith",
      "html_url": "https://github.com/keith",
      "followers_url": "https://api.github.com/users/keith/followers",
      "following_url": "https://api.github.com/users/keith/following{/other_user}",
      "gists_url": "https://api.github.com/users/keith/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/keith/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/keith/subscriptions",
      "organizations_url": "https://api.github.com/users/keith/orgs",
      "repos_url": "https://api.github.com/users/keith/repos",
      "events_url": "https://api.github.com/users/keith/events{/privacy}",
      "received_events_url": "https://api.github.com/users/keith/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [

    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 10,
    "created_at": "2020-01-15T19:51:44Z",
    "updated_at": "2020-01-16T18:51:55Z",
    "closed_at": null,
    "author_association": "CONTRIBUTOR",
    "pull_request": {
      "url": "https://api.github.com/repos/apple/swift/pulls/29230",
      "html_url": "https://github.com/apple/swift/pull/29230",
      "diff_url": "https://github.com/apple/swift/pull/29230.diff",
      "patch_url": "https://github.com/apple/swift/pull/29230.patch"
    },
    "body": "This warning occurred in the case that you had multiple files in a\r\nmodule, some that used `@_implementationOnly import Foo` and some that\r\nused `import Foo`. The downside of having this warning is that users\r\ncannot represent in which files `Foo` has to be imported publicly vs\r\nwhich files are only using it in an implementation only capacity. The\r\nother downside is that if users go to add a public dependency on `Foo`\r\nto their module, they would have to change all the other\r\n`@_implementationOnly import Foo` calls in the module to no longer have\r\nthe annotation.\r\n\r\nRelated conversation: https://forums.swift.org/t/update-on-implementation-only-imports/26996/13"
  },
  {
    "url": "https://api.github.com/repos/apple/swift/issues/29229",
    "repository_url": "https://api.github.com/repos/apple/swift",
    "labels_url": "https://api.github.com/repos/apple/swift/issues/29229/labels{/name}",
    "comments_url": "https://api.github.com/repos/apple/swift/issues/29229/comments",
    "events_url": "https://api.github.com/repos/apple/swift/issues/29229/events",
    "html_url": "https://github.com/apple/swift/pull/29229",
    "id": 550375863,
    "node_id": "MDExOlB1bGxSZXF1ZXN0MzYzMjkzMDEx",
    "number": 29229,
    "title": "[5.2] IRGen: don't create ObjC methods with the unnamed_addr attribute",
    "user": {
      "login": "eeckstein",
      "id": 15270291,
      "node_id": "MDQ6VXNlcjE1MjcwMjkx",
      "avatar_url": "https://avatars0.githubusercontent.com/u/15270291?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/eeckstein",
      "html_url": "https://github.com/eeckstein",
      "followers_url": "https://api.github.com/users/eeckstein/followers",
      "following_url": "https://api.github.com/users/eeckstein/following{/other_user}",
      "gists_url": "https://api.github.com/users/eeckstein/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/eeckstein/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/eeckstein/subscriptions",
      "organizations_url": "https://api.github.com/users/eeckstein/orgs",
      "repos_url": "https://api.github.com/users/eeckstein/repos",
      "events_url": "https://api.github.com/users/eeckstein/events{/privacy}",
      "received_events_url": "https://api.github.com/users/eeckstein/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [

    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 2,
    "created_at": "2020-01-15T19:11:53Z",
    "updated_at": "2020-01-17T09:33:53Z",
    "closed_at": null,
    "author_association": "MEMBER",
    "pull_request": {
      "url": "https://api.github.com/repos/apple/swift/pulls/29229",
      "html_url": "https://github.com/apple/swift/pull/29229",
      "diff_url": "https://github.com/apple/swift/pull/29229.diff",
      "patch_url": "https://github.com/apple/swift/pull/29229.patch"
    },
    "body": "\r\nThis is a cherry-pick of https://github.com/apple/swift/pull/29188.\r\n\r\n- **Explanation**: In some places, Foundation is comparing ObjC method pointers.\r\nTherefore LLVM's function merging pass must not create aliases for identical functions, but instead create thunks. This can be ensured by not creating ObjC methods with the unnamed_addr attribute.\r\n- **Scope**: It problem causes an exception when using NSKeyedArchiver.archivedData. But there might be more places in Foundation where it is a problem.\r\n- **Risk**: Low\r\n- **Issue**: rdar://problem/58483698\r\n- **Testing**: with a regression test\r\n- **Reviewer**: @aschwaighofer \r\n"
  },
  {
    "url": "https://api.github.com/repos/apple/swift/issues/29222",
    "repository_url": "https://api.github.com/repos/apple/swift",
    "labels_url": "https://api.github.com/repos/apple/swift/issues/29222/labels{/name}",
    "comments_url": "https://api.github.com/repos/apple/swift/issues/29222/comments",
    "events_url": "https://api.github.com/repos/apple/swift/issues/29222/events",
    "html_url": "https://github.com/apple/swift/pull/29222",
    "id": 550276081,
    "node_id": "MDExOlB1bGxSZXF1ZXN0MzYzMjExMzY5",
    "number": 29222,
    "title": "Accelerate fix interpolate between neighbours tests",
    "user": {
      "login": "FlexMonkey",
      "id": 6221298,
      "node_id": "MDQ6VXNlcjYyMjEyOTg=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/6221298?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/FlexMonkey",
      "html_url": "https://github.com/FlexMonkey",
      "followers_url": "https://api.github.com/users/FlexMonkey/followers",
      "following_url": "https://api.github.com/users/FlexMonkey/following{/other_user}",
      "gists_url": "https://api.github.com/users/FlexMonkey/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/FlexMonkey/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/FlexMonkey/subscriptions",
      "organizations_url": "https://api.github.com/users/FlexMonkey/orgs",
      "repos_url": "https://api.github.com/users/FlexMonkey/repos",
      "events_url": "https://api.github.com/users/FlexMonkey/events{/privacy}",
      "received_events_url": "https://api.github.com/users/FlexMonkey/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [

    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 1,
    "created_at": "2020-01-15T15:58:11Z",
    "updated_at": "2020-01-16T03:15:37Z",
    "closed_at": null,
    "author_association": "CONTRIBUTOR",
    "pull_request": {
      "url": "https://api.github.com/repos/apple/swift/pulls/29222",
      "html_url": "https://github.com/apple/swift/pull/29222",
      "diff_url": "https://github.com/apple/swift/pull/29222.diff",
      "patch_url": "https://github.com/apple/swift/pull/29222.patch"
    },
    "body": "The single- and double-precision InterpolateBetweenNeighbours tests created illegal indices in the control vector that lead to undefined behaviour and occasional test failures. This PR fixes that.\r\n\r\ncc: @stephentyrone  \r\n"
  },
  {
    "url": "https://api.github.com/repos/apple/swift/issues/29221",
    "repository_url": "https://api.github.com/repos/apple/swift",
    "labels_url": "https://api.github.com/repos/apple/swift/issues/29221/labels{/name}",
    "comments_url": "https://api.github.com/repos/apple/swift/issues/29221/comments",
    "events_url": "https://api.github.com/repos/apple/swift/issues/29221/events",
    "html_url": "https://github.com/apple/swift/pull/29221",
    "id": 550250409,
    "node_id": "MDExOlB1bGxSZXF1ZXN0MzYzMTkwMTQ0",
    "number": 29221,
    "title": "Accelerate deprecate split complex inits",
    "user": {
      "login": "FlexMonkey",
      "id": 6221298,
      "node_id": "MDQ6VXNlcjYyMjEyOTg=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/6221298?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/FlexMonkey",
      "html_url": "https://github.com/FlexMonkey",
      "followers_url": "https://api.github.com/users/FlexMonkey/followers",
      "following_url": "https://api.github.com/users/FlexMonkey/following{/other_user}",
      "gists_url": "https://api.github.com/users/FlexMonkey/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/FlexMonkey/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/FlexMonkey/subscriptions",
      "organizations_url": "https://api.github.com/users/FlexMonkey/orgs",
      "repos_url": "https://api.github.com/users/FlexMonkey/repos",
      "events_url": "https://api.github.com/users/FlexMonkey/events{/privacy}",
      "received_events_url": "https://api.github.com/users/FlexMonkey/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [

    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 4,
    "created_at": "2020-01-15T15:17:37Z",
    "updated_at": "2020-01-18T03:29:58Z",
    "closed_at": null,
    "author_association": "CONTRIBUTOR",
    "pull_request": {
      "url": "https://api.github.com/repos/apple/swift/pulls/29221",
      "html_url": "https://github.com/apple/swift/pull/29221",
      "diff_url": "https://github.com/apple/swift/pull/29221.diff",
      "patch_url": "https://github.com/apple/swift/pull/29221.patch"
    },
    "body": "This PR deprecates the `init(fromInputArray:realParts:imaginaryParts:)` for `DSPSplitComplex` and `DSPDoubleSplitComplex`.\r\n\r\nI've also updated the FFT tests to no longer use these deprecated initializers, and to replace the incorrect use of temporary pointers with `withUnsafeMutableBufferPointer`.\r\n\r\n@stephentyrone "
  },
  {
    "url": "https://api.github.com/repos/apple/swift/issues/29216",
    "repository_url": "https://api.github.com/repos/apple/swift",
    "labels_url": "https://api.github.com/repos/apple/swift/issues/29216/labels{/name}",
    "comments_url": "https://api.github.com/repos/apple/swift/issues/29216/comments",
    "events_url": "https://api.github.com/repos/apple/swift/issues/29216/events",
    "html_url": "https://github.com/apple/swift/pull/29216",
    "id": 549976813,
    "node_id": "MDExOlB1bGxSZXF1ZXN0MzYyOTY1NDQ5",
    "number": 29216,
    "title": "[DNM, Incremental] Includes fixes, tests, fine-grained on-by-default",
    "user": {
      "login": "davidungar",
      "id": 461264,
      "node_id": "MDQ6VXNlcjQ2MTI2NA==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/461264?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/davidungar",
      "html_url": "https://github.com/davidungar",
      "followers_url": "https://api.github.com/users/davidungar/followers",
      "following_url": "https://api.github.com/users/davidungar/following{/other_user}",
      "gists_url": "https://api.github.com/users/davidungar/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/davidungar/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/davidungar/subscriptions",
      "organizations_url": "https://api.github.com/users/davidungar/orgs",
      "repos_url": "https://api.github.com/users/davidungar/repos",
      "events_url": "https://api.github.com/users/davidungar/events{/privacy}",
      "received_events_url": "https://api.github.com/users/davidungar/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [

    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 3,
    "created_at": "2020-01-15T05:36:06Z",
    "updated_at": "2020-01-15T18:33:23Z",
    "closed_at": null,
    "author_association": "CONTRIBUTOR",
    "pull_request": {
      "url": "https://api.github.com/repos/apple/swift/pulls/29216",
      "html_url": "https://github.com/apple/swift/pull/29216",
      "diff_url": "https://github.com/apple/swift/pull/29216.diff",
      "patch_url": "https://github.com/apple/swift/pull/29216.patch"
    },
    "body": "Let's see what breaks!"
  }
]
